## Default values for orion.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

# -- option to override the name config in the _helpers.tpl
nameOverride: ""
# -- option to override the fullname config in the _helpers.tpl
fullnameOverride: ""

service:
  # -- service type
  type: ClusterIP
  # -- port to be used by the service
  port: 1026
  # -- addtional annotations, if required
  annotations: {}

# -- if a orion specific service account should be used, it can be configured here
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  # -- specifies if the account should be created
  create: false

deployment:
  # -- initial number of target replications, can be different if autoscaling is enabled
  replicaCount: 1
  # -- number of old replicas to be retained
  revisionHistoryLimit: 3
  ## configuration of the orion update strategy
  updateStrategy:
    # -- type of the update
    type: RollingUpdate
    # -- new pods will be added gradually
    rollingUpdate:
      # -- number of pods that can be created above the desired amount while updating
      maxSurge: 1
      # -- number of pods that can be unavailable while updating
      maxUnavailable: 0
  ## configuration of the image to be used
  image:
    # -- orion image name
    # ref: https://hub.docker.com/r/fiware/orion/
    # ref: https://quay.io/repository/fiware/orion-ld
    repository: fiware/orion
    #repository: fiware/orion
    # -- tag of the image to be used
    tag: 3.7.0
    # -- specification of the image pull policy
    pullPolicy: IfNotPresent
  # -- additional labels for the deployment, if required
  additionalLabels: {}
  # -- additional annotations for the deployment, if required
  additionalAnnotations: {}
  # -- orion resource requests and limits, we leave the default empty to make that a concious choice by the user.
  # for the autoscaling to make sense, you should configure this.
  # resources:
    # limits:
      # cpu: 100m
      # memory: 128Mi
    # requests:
      # cpu: 100m
      # memory: 128Mi
  # -- selector template
  # ref: https://kubernetes.io/docs/user-guide/node-selection/
  nodeSelector: {}
  # -- tolerations template
  # ref: ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  # -- affinity template
  # ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## liveness and readiness probes of the orion broker, they will be evaluated against the version endpoint
  # ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  readinessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 30
  # -- additional sidepods for the deployment, if required
  sidecars: []
  # -- additional volumes for the deployment, if required
  volumes: []

## pod autoscaling configuration, use for automatic scaling of the broker pods
autoscaling:
  # -- should autoscaling be enabled for the context broker
  enabled: false
  # -- minimum number of running pods
  minReplicas: 1
  # -- maximum number of running pods
  maxReplicas: 10
  # -- metrics to react on
  metrics: []
  # -- List of MetricSpecs to decide whether to scale
  # See https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.17/#metricspec-v2beta2-autoscaling
  # scaler targets to hold average cpu around 80%
  #- type: Resource
  #  resource:
  #    name: cpu
  #    target:
  #      type: Utilization
  #      averageUtilization: 80
  ## scaler targets to hold average memory around 80%
  #  - type: Resource
  #    resource:
  #      name: memory
  #      target:
  #        type: Utilization
  #        averageUtilization: 80

## openshift specific route definition. Will not work on plain k8s
route:
  ## -- should the deployment create openshift routes
  enabled: false
  # -- annotations to be added to the route
  annotations: {}
  # -- host to be used
  # host: localhost
  # -- tls configuration for the route
  tls: {}
  # termination: edge

## ingress configuration
ingress:
  # -- should there be an ingress to connect orion with the public internet
  enabled: false
  # -- annotations to be added to the ingress
  annotations: {}
    # kubernetes.io/ingress.class: "ambassador"
    ## example annotations, allowing cert-manager to automatically create tls-certs and forcing everything to use ssl.
    # kubernetes.io/tls-acme: "true"
    # ingress.kubernetes.io/ssl-redirect: "true"
  # -- all hosts to be provided
  hosts: []
    # -- provide a hosts and the paths that should be available
    # - host: localhost
      # paths:
      # - /
  # -- configure the ingress' tls
  tls: []
    # - secretName: orion-tls
      # hosts:
        # - orion.fiware.org

broker:
  envPrefix: ORION_
  version: ngsi-v2
  # -- port that the broker is listening to
  port: 1026
  ## logging configuration of the orion broker
  logging:
    # -- log level of the broker
    level: "DEBUG"
    ## specifies the initial trace levels for logging
    # trace: 70
    ## log summary period in seconds
    # summaryPeriod: 0
    ## to see every possible alarm-provoking failure in the log-file, even when an alarm is already active
    # relogAlarms: false
    ## to make the traces to standard out formated for humans
    # forHumans: false
    ## log line maximum length
    # lineMaxSize: 
    ## for those log traces at INFO level that print request and/or response payloads, this is the maximum allowed size for those payloads
    # infoPayloadMaxSize:
  
  ## database configuration
  db:
    # -- configuration of the mongo-db hosts. if multiple hosts are inserted, its assumed that mongo is running as a replica set
    hosts: mongo-db
    # - mongodb
    # -- the db to use. if running in multiservice mode, its used as a prefix.
    name: orion
    # -- Database authentication (not needed if MongoDB doesn't use --auth)
    auth:
      # --user for connecting mongo
      user: ""
      # -- password to be used on mongo
      password: ""
      # -- the MongoDB authentication mechanism to use in the case user and password is set
      # mech: SCRAM-SHA-1
    # -- name of the replicaset
    #replicaSet: rs0
    # -- enable SSL in the connection to MongoDB. needs to correspond with the mongoDB setting
    # sslEnabled: true
    # -- specifies the timeout in milliseconds for connections to the replica set
    # timeout: 
    # -- database connection pool
    # poolSize: 10
    # -- write concern for MongoDB write operations: acknowledged (1) or unacknowledged (0)
    # writeConcern: 1

## Configuration to enable/disable the test-container
test:
  # -- should the test be enabled?
  enabled: true