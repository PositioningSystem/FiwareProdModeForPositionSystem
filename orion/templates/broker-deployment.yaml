apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orion.fullname" . }}
  labels:
    {{- include "orion.broker.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  strategy:
  {{- with .Values.deployment.updateStrategy }}
  {{- toYaml . | nindent 4 }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "orion.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        {{ include "orion.labels" . | nindent 8 }}
        {{- with .Values.deployment.additionalLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}          
          image: "{{ .Values.deployment.image.repository }}:{{ .Values.deployment.image.tag }}"
          imagePullPolicy: {{ .Values.deployment.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.broker.port}}
              protocol: TCP
          # special handling for the health check of telefonica/orion
          {{ if eq .Values.broker.envPrefix "ORION_" }}
          readinessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "echo /tmp/healthcheck? && true > /tmp/healthcheck"
            initialDelaySeconds: {{ .Values.deployment.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.readinessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.readinessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.readinessProbe.timeoutSeconds }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - "echo /tmp/healthcheck? && true > /tmp/healthcheck"
            initialDelaySeconds: {{ .Values.deployment.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.deployment.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.deployment.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.deployment.livenessProbe.timeoutSeconds }}
          {{ end }}
          env:
            - name: {{ .Values.broker.envPrefix }}PORT
              value: {{ .Values.broker.port | quote }}
            - name: {{ .Values.broker.envPrefix }}DISABLE_FILE_LOG
              value: "TRUE"
            - name: {{ .Values.broker.envPrefix }}MONGO_HOST
              value: {{ .Values.broker.db.hosts }}:27017
            - name: {{ .Values.broker.envPrefix }}MONGO_DB
              value: {{ .Values.broker.db.name }}
            - name: {{ .Values.broker.envPrefix }}MONGO_USER
              value: {{ .Values.broker.db.auth.user }}
            - name: {{ .Values.broker.envPrefix }}MONGO_PASSWORD
              value: {{ .Values.broker.db.auth.password }}
            # logging
            - name: {{ .Values.broker.envPrefix }}LOG_LEVEL
              value: {{ .Values.broker.logging.level }}
            {{- if .Values.broker.logging.dir }}
            - name: {{ .Values.broker.envPrefix }}LOG_DIR
              value: {{ .Values.broker.logging.dir }}
            {{- end }}